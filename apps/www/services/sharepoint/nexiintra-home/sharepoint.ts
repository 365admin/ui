import z from "zod"
// Generated by pnp2ts - do not edit
export namespace brand_identity {
    export const listName = "brand_identity"

    export function map(item: any) {


        return {
            Id: item.id,
            Title: item.fields.Title,
            CreatedBy: item.createdBy.user.email,
            Created: new Date(item.createdDateTime),
            ModifiedBy: item.lastModifiedBy.user.email,
            Modified: new Date(item.lastModifiedDateTime),
        }
    }
    export const schema = z.object({
        CreatedBy: z.string(),
        Created: z.date(),
        ModifiedBy: z.string(),
        Modified: z.date(),
        Id: z.string(),
        Title: z.string(),

    })
} export namespace CopyofSharedDocuments {
    export const listName = "Copy of Shared Documents"

    export function map(item: any) {


        return {
            Id: item.id,
            Title: item.fields.Title,
            CreatedBy: item.createdBy.user.email,
            Created: new Date(item.createdDateTime),
            ModifiedBy: item.lastModifiedBy.user.email,
            Modified: new Date(item.lastModifiedDateTime),
            lcf76f155ced4ddcb4097134ff3c332f: item.fields.lcf76f155ced4ddcb4097134ff3c332f ? item.fields.lcf76f155ced4ddcb4097134ff3c332f : "",
            MediaServiceOCR: item.fields.MediaServiceOCR ? item.fields.MediaServiceOCR : "",
            MediaServiceLocation: item.fields.MediaServiceLocation ? item.fields.MediaServiceLocation : "",
            SharedWithDetails: item.fields.SharedWithDetails ? item.fields.SharedWithDetails : "",
        }
    }
    export const schema = z.object({
        CreatedBy: z.string(),
        Created: z.date(),
        ModifiedBy: z.string(),
        Modified: z.date(),
        Id: z.string(),
        Title: z.string(),

        lcf76f155ced4ddcb4097134ff3c332f: z.string(),
        MediaServiceOCR: z.string(),
        MediaServiceLocation: z.string(),
        SharedWithDetails: z.string(),
    })
} export namespace Countries {
    export const listName = "Countries"

    export function map(item: any) {


        return {
            Id: item.id,
            Title: item.fields.Title,
            CreatedBy: item.createdBy.user.email,
            Created: new Date(item.createdDateTime),
            ModifiedBy: item.lastModifiedBy.user.email,
            Modified: new Date(item.lastModifiedDateTime),
            Code: item.fields.Code ? item.fields.Code : "",
            SortOrder: item.fields.SortOrder,
        }
    }
    export const schema = z.object({
        CreatedBy: z.string(),
        Created: z.date(),
        ModifiedBy: z.string(),
        Modified: z.date(),
        Id: z.string(),
        Title: z.string(),

        Code: z.string(),
        SortOrder: z.number(),
    })
} export namespace Documents {
    export const listName = "Documents"

    export function map(item: any) {


        return {
            Id: item.id,
            Title: item.fields.Title,
            CreatedBy: item.createdBy.user.email,
            Created: new Date(item.createdDateTime),
            ModifiedBy: item.lastModifiedBy.user.email,
            Modified: new Date(item.lastModifiedDateTime),
        }
    }
    export const schema = z.object({
        CreatedBy: z.string(),
        Created: z.date(),
        ModifiedBy: z.string(),
        Modified: z.date(),
        Id: z.string(),
        Title: z.string(),

    })
} export namespace Events {
    export const listName = "Events"

    export function map(item: any) {


        return {
            Id: item.id,
            Title: item.fields.Title,
            CreatedBy: item.createdBy.user.email,
            Created: new Date(item.createdDateTime),
            ModifiedBy: item.lastModifiedBy.user.email,
            Modified: new Date(item.lastModifiedDateTime),
            BannerImageUrl: item.fields.BannerImageUrl ? item.fields.BannerImageUrl : "",
        }
    }
    export const schema = z.object({
        CreatedBy: z.string(),
        Created: z.date(),
        ModifiedBy: z.string(),
        Modified: z.date(),
        Id: z.string(),
        Title: z.string(),

        BannerImageUrl: z.string(),
    })
} export namespace FormTemplates {
    export const listName = "Form Templates"

    export function map(item: any) {


        return {
            Id: item.id,
            Title: item.fields.Title,
            CreatedBy: item.createdBy.user.email,
            Created: new Date(item.createdDateTime),
            ModifiedBy: item.lastModifiedBy.user.email,
            Modified: new Date(item.lastModifiedDateTime),
        }
    }
    export const schema = z.object({
        CreatedBy: z.string(),
        Created: z.date(),
        ModifiedBy: z.string(),
        Modified: z.date(),
        Id: z.string(),
        Title: z.string(),

    })
} export namespace GroupRegulatorySystem {
    export const listName = "Group Regulatory System"

    export function map(item: any) {


        return {
            Id: item.id,
            Title: item.fields.Title,
            CreatedBy: item.createdBy.user.email,
            Created: new Date(item.createdDateTime),
            ModifiedBy: item.lastModifiedBy.user.email,
            Modified: new Date(item.lastModifiedDateTime),
            DocumentCode: item.fields.DocumentCode ? item.fields.DocumentCode : "",
            ApprovalDate: new Date(item.fields.ApprovalDate),
            ShowNewLabeluntil: new Date(item.fields.ShowNewLabeluntil),
            ShowUpdateLabelUntil: new Date(item.fields.ShowUpdateLabelUntil),
            EffectiveDate: new Date(item.fields.EffectiveDate),
            DocumentVersion: item.fields.DocumentVersion ? item.fields.DocumentVersion : "",
            DocumentTitle: item.fields.DocumentTitle ? item.fields.DocumentTitle : "",
            Process: item.fields.Process ? item.fields.Process : "",
            ContactPerson: item.fields.ContactPerson ? item.fields.ContactPerson : "",
            NotesCurrentDocument: item.fields.NotesCurrentDocument ? item.fields.NotesCurrentDocument : "",
            CrossReferenceOtherRegulations: item.fields.CrossReferenceOtherRegulations ? item.fields.CrossReferenceOtherRegulations : "",
            ProcessOwner: item.fields.ProcessOwner ? item.fields.ProcessOwner : "",
        }
    }
    export const schema = z.object({
        CreatedBy: z.string(),
        Created: z.date(),
        ModifiedBy: z.string(),
        Modified: z.date(),
        Id: z.string(),
        Title: z.string(),

        DocumentCode: z.string(),
        ApprovalDate: z.date(),
        ShowNewLabeluntil: z.date(),
        ShowUpdateLabelUntil: z.date(),
        EffectiveDate: z.date(),
        DocumentVersion: z.string(),
        DocumentTitle: z.string(),
        Process: z.string(),
        ContactPerson: z.string(),
        NotesCurrentDocument: z.string(),
        CrossReferenceOtherRegulations: z.string(),
        ProcessOwner: z.string(),
    })
} export namespace NewsChannels {
    export const listName = "News Channels"

    export function map(item: any) {


        return {
            Id: item.id,
            Title: item.fields.Title,
            CreatedBy: item.createdBy.user.email,
            Created: new Date(item.createdDateTime),
            ModifiedBy: item.lastModifiedBy.user.email,
            Modified: new Date(item.lastModifiedDateTime),
            Category: item.fields.Category,
        }
    }
    export const schema = z.object({
        CreatedBy: z.string(),
        Created: z.date(),
        ModifiedBy: z.string(),
        Modified: z.date(),
        Id: z.string(),
        Title: z.string(),

        Category: z.string().nullable(),
    })
} export namespace SiteAssets {
    export const listName = "Site Assets"

    export function map(item: any) {


        return {
            Id: item.id,
            Title: item.fields.Title,
            CreatedBy: item.createdBy.user.email,
            Created: new Date(item.createdDateTime),
            ModifiedBy: item.lastModifiedBy.user.email,
            Modified: new Date(item.lastModifiedDateTime),
            lcf76f155ced4ddcb4097134ff3c332f: item.fields.lcf76f155ced4ddcb4097134ff3c332f ? item.fields.lcf76f155ced4ddcb4097134ff3c332f : "",
        }
    }
    export const schema = z.object({
        CreatedBy: z.string(),
        Created: z.date(),
        ModifiedBy: z.string(),
        Modified: z.date(),
        Id: z.string(),
        Title: z.string(),

        lcf76f155ced4ddcb4097134ff3c332f: z.string(),
    })
} export namespace SitePages {
    export const listName = "Site Pages"

    export function map(item: any) {


        return {
            Id: item.id,
            Title: item.fields.Title,
            CreatedBy: item.createdBy.user.email,
            Created: new Date(item.createdDateTime),
            ModifiedBy: item.lastModifiedBy.user.email,
            Modified: new Date(item.lastModifiedDateTime),
        }
    }
    export const schema = z.object({
        CreatedBy: z.string(),
        Created: z.date(),
        ModifiedBy: z.string(),
        Modified: z.date(),
        Id: z.string(),
        Title: z.string(),

    })
} export namespace StyleLibrary {
    export const listName = "Style Library"

    export function map(item: any) {


        return {
            Id: item.id,
            Title: item.fields.Title,
            CreatedBy: item.createdBy.user.email,
            Created: new Date(item.createdDateTime),
            ModifiedBy: item.lastModifiedBy.user.email,
            Modified: new Date(item.lastModifiedDateTime),
        }
    }
    export const schema = z.object({
        CreatedBy: z.string(),
        Created: z.date(),
        ModifiedBy: z.string(),
        Modified: z.date(),
        Id: z.string(),
        Title: z.string(),

    })
} export namespace Test_copy_paste_mele {
    export const listName = "Test_copy_paste_mele"

    export function map(item: any) {


        return {
            Id: item.id,
            Title: item.fields.Title,
            CreatedBy: item.createdBy.user.email,
            Created: new Date(item.createdDateTime),
            ModifiedBy: item.lastModifiedBy.user.email,
            Modified: new Date(item.lastModifiedDateTime),
            gggggg: item.fields.gggggg ? item.fields.gggggg : "",
        }
    }
    export const schema = z.object({
        CreatedBy: z.string(),
        Created: z.date(),
        ModifiedBy: z.string(),
        Modified: z.date(),
        Id: z.string(),
        Title: z.string(),

        gggggg: z.string(),
    })
} export namespace Test_import {
    export const listName = "Test_import"

    export function map(item: any) {


        return {
            Id: item.id,
            Title: item.fields.Title,
            CreatedBy: item.createdBy.user.email,
            Created: new Date(item.createdDateTime),
            ModifiedBy: item.lastModifiedBy.user.email,
            Modified: new Date(item.lastModifiedDateTime),
        }
    }
    export const schema = z.object({
        CreatedBy: z.string(),
        Created: z.date(),
        ModifiedBy: z.string(),
        Modified: z.date(),
        Id: z.string(),
        Title: z.string(),

    })
} export namespace Units {
    export const listName = "Units"

    export function map(item: any) {


        return {
            Id: item.id,
            Title: item.fields.Title,
            CreatedBy: item.createdBy.user.email,
            Created: new Date(item.createdDateTime),
            ModifiedBy: item.lastModifiedBy.user.email,
            Modified: new Date(item.lastModifiedDateTime),
            code: item.fields.code ? item.fields.code : "",
            SortOrder: item.fields.SortOrder,
        }
    }
    export const schema = z.object({
        CreatedBy: z.string(),
        Created: z.date(),
        ModifiedBy: z.string(),
        Modified: z.date(),
        Id: z.string(),
        Title: z.string(),

        code: z.string(),
        SortOrder: z.number(),
    })
} export namespace Video {
    export const listName = "Video"

    export function map(item: any) {


        return {
            Id: item.id,
            Title: item.fields.Title,
            CreatedBy: item.createdBy.user.email,
            Created: new Date(item.createdDateTime),
            ModifiedBy: item.lastModifiedBy.user.email,
            Modified: new Date(item.lastModifiedDateTime),
        }
    }
    export const schema = z.object({
        CreatedBy: z.string(),
        Created: z.date(),
        ModifiedBy: z.string(),
        Modified: z.date(),
        Id: z.string(),
        Title: z.string(),

    })
}