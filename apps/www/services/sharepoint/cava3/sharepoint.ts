import z from "zod"
// Generated by pnp2ts - do not edit


function mapLookup(item: any) {
	if (!item) return null
	return {
		LookupId: item.lookupId,
		LookupValue: item.lookupValue
	}
}

function mapLookupMulti(items: any[]) {
	if (!items) return []
	return items.map(item => {
		return {
			LookupId: item.lookupId,
			LookupValue: item.lookupValue
		}
	})
}

export namespace Buildings {
	export const listName = "Buildings"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			Wheelchair: item.fields.Wheelchair ? true : false,
			Image: item.fields.Image ? item.fields.Image : "",
			Floors: mapLookupMulti(item.fields.Floors),
			HasWorkspaces: item.fields.HasWorkspaces ? true : false,
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		Wheelchair: z.boolean(),
		Image: z.string(),
		Floors: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).array().nullable(),
		HasWorkspaces: z.boolean(),
		_ColorTag: z.string(),
	})
} export namespace CateringOrders {
	export const listName = "Catering Orders"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			RoomEmail: item.fields.RoomEmail ? item.fields.RoomEmail : "",
			Appointmentstart: new Date(item.fields.Appointmentstart),
			
		
			OrderData: item.fields.OrderData ? item.fields.OrderData : "",
			Organizer_x0020_Email: item.fields.Organizer_x0020_Email ? item.fields.Organizer_x0020_Email : "",
			Appointmentdata: item.fields.Appointmentdata ? item.fields.Appointmentdata : "",
			Status: item.fields.Status ?? "",
			Visitor_x0020_Registrations: item.fields.Visitor_x0020_Registrations ? item.fields.Visitor_x0020_Registrations : "",
			Equipment_x0020_Orders: item.fields.Equipment_x0020_Orders ? item.fields.Equipment_x0020_Orders : "",
			Reference: item.fields.Reference ? item.fields.Reference : "",
			Booking_x0020_Web_x0020_Link: item.fields.Booking_x0020_Web_x0020_Link ? item.fields.Booking_x0020_Web_x0020_Link : "",
			Catering_x0020_order_x0020_refer: item.fields.Catering_x0020_order_x0020_refer ? item.fields.Catering_x0020_order_x0020_refer : "",
			Stage: item.fields.Stage ? item.fields.Stage : "",
			Comments: item.fields.Comments ? item.fields.Comments : "",
			Cost_x0020_Centre: item.fields.Cost_x0020_Centre ? item.fields.Cost_x0020_Centre : "",
			ConfirmationHTML: item.fields.ConfirmationHTML ? item.fields.ConfirmationHTML : "",
			Site: mapLookup(item.fields.Site),
			Room: mapLookup(item.fields.Room),
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
			Outlook_x0020_Reference: item.fields.Outlook_x0020_Reference ? item.fields.Outlook_x0020_Reference : "",
			Outlook_x0020_Etag: item.fields.Outlook_x0020_Etag ? item.fields.Outlook_x0020_Etag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		RoomEmail: z.string(),
		Appointmentstart: z.date(),

		OrderData: z.string(),
		Organizer_x0020_Email: z.string(),
		Appointmentdata: z.string(),
		Status: z.string().nullable(),
		Visitor_x0020_Registrations: z.string(),
		Equipment_x0020_Orders: z.string(),
		Reference: z.string(),
		Booking_x0020_Web_x0020_Link: z.string(),
		Catering_x0020_order_x0020_refer: z.string(),
		Stage: z.string(),
		Comments: z.string(),
		Cost_x0020_Centre: z.string(),
		ConfirmationHTML: z.string(),
		Site: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).nullable(),
		Room: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).nullable(),
		_ColorTag: z.string(),
		Outlook_x0020_Reference: z.string(),
		Outlook_x0020_Etag: z.string(),
	})
} export namespace CateringOrdersInvoices {
	export const listName = "Catering Orders Invoices"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			Amount: item.fields.Amount,
			InvoiceHTML: item.fields.InvoiceHTML ? item.fields.InvoiceHTML : "",
			Sales_x0020_Order: mapLookup(item.fields.Sales_x0020_Order),
			CostCentre: item.fields.CostCentre ? item.fields.CostCentre : "",
			Invoicedto: item.fields.Invoicedto,
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		Amount: z.number(),
		InvoiceHTML: z.string(),
		Sales_x0020_Order: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).nullable(),
		CostCentre: z.string(),
		Invoicedto: z.string().nullable(),
		_ColorTag: z.string(),
	})
} export namespace CateringOrdersItems {
	export const listName = "Catering Orders Items"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			Item: mapLookup(item.fields.Item),
			DeliveryDateandTime: new Date(item.fields.DeliveryDateandTime),
			Provider: mapLookup(item.fields.Provider),
			Quantity: item.fields.Quantity,
			Pricepritem: item.fields.Pricepritem,
			Catering_x0020_Order: mapLookup(item.fields.Catering_x0020_Order),
			Status: item.fields.Status ?? "",
			DeliverTo: item.fields.DeliverTo ? item.fields.DeliverTo : "",
			Room: mapLookup(item.fields.Room),
			CostCentre: item.fields.CostCentre ? item.fields.CostCentre : "",
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		Item: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).nullable(),
		DeliveryDateandTime: z.date(),
		Provider: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).nullable(),
		Quantity: z.number(),
		Pricepritem: z.number(),
		Catering_x0020_Order: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).nullable(),
		Status: z.string().nullable(),
		DeliverTo: z.string(),
		Room: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).nullable(),
		CostCentre: z.string(),
		_ColorTag: z.string(),
	})
} export namespace CateringOrdersWorkOrders {
	export const listName = "Catering Orders Work Orders"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			Amount: item.fields.Amount,
			Sales_x0020_Order: mapLookup(item.fields.Sales_x0020_Order),
			WorkOrderHTML: item.fields.WorkOrderHTML ? item.fields.WorkOrderHTML : "",
			Provider: mapLookup(item.fields.Provider),
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		Amount: z.number(),
		Sales_x0020_Order: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).nullable(),
		WorkOrderHTML: z.string(),
		Provider: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).nullable(),
		_ColorTag: z.string(),
	})
} export namespace CateringProviders {
	export const listName = "Catering Providers"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			email: item.fields.email ? item.fields.email : "",
			OrderPage: item.fields.OrderPage ? item.fields.OrderPage : "",
			Notes: item.fields.Notes ? item.fields.Notes : "",
			Isstandalone: item.fields.Isstandalone ? true : false,
			LocalCurrency: item.fields.LocalCurrency ? item.fields.LocalCurrency : "",
			Opening: item.fields.Opening,
			Closing: item.fields.Closing,
			Is_x0020_Reception: item.fields.Is_x0020_Reception ? true : false,
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		email: z.string(),
		OrderPage: z.string(),
		Notes: z.string(),
		Isstandalone: z.boolean(),
		LocalCurrency: z.string(),
		Opening: z.number(),
		Closing: z.number(),
		Is_x0020_Reception: z.boolean(),
		_ColorTag: z.string(),
	})
} export namespace CavaSAPreport {
	export const listName = "Cava SAP report"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			field_0: item.fields.field_0,
			field_1: item.fields.field_1,
			field_2: item.fields.field_2,
			field_4: item.fields.field_4 ? item.fields.field_4 : "",
			field_5: item.fields.field_5 ? item.fields.field_5 : "",
			field_6: item.fields.field_6,
			field_7: item.fields.field_7,
			field_8: item.fields.field_8,
			field_9: item.fields.field_9,
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		field_0: z.number(),
		field_1: z.number(),
		field_2: z.number(),
		field_4: z.string(),
		field_5: z.string(),
		field_6: z.number(),
		field_7: z.number(),
		field_8: z.number(),
		field_9: z.number(),
		_ColorTag: z.string(),
	})
} export namespace Companies {
	export const listName = "Companies"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			field_1: item.fields.field_1 ? item.fields.field_1 : "",
			field_2: item.fields.field_2 ? item.fields.field_2 : "",
			ContactPerson: item.fields.ContactPerson,
			PrimaryLocation: mapLookup(item.fields.PrimaryLocation),
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		field_1: z.string(),
		field_2: z.string(),
		ContactPerson: z.string().nullable(),
		PrimaryLocation: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).nullable(),
		_ColorTag: z.string(),
	})
} export namespace Countries {
	export const listName = "Countries"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			Countrycode: item.fields.Countrycode ? item.fields.Countrycode : "",
			Flag: item.fields.Flag ? item.fields.Flag : "",
			Locations: mapLookupMulti(item.fields.Locations),
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		Countrycode: z.string(),
		Flag: z.string(),
		Locations: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).array().nullable(),
		_ColorTag: z.string(),
	})
} export namespace Currency {
	export const listName = "Currency"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			EURrate: item.fields.EURrate,
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		EURrate: z.number(),
		_ColorTag: z.string(),
	})
} export namespace Desks {
	export const listName = "Desks"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			Email: item.fields.Email ? item.fields.Email : "",
			ProvisioningStatus: item.fields.ProvisioningStatus ?? "",
			LocationonWorkspace: item.fields.LocationonWorkspace ? item.fields.LocationonWorkspace : "",
			Last_x0020_PowerShell_x0020_Comm: item.fields.Last_x0020_PowerShell_x0020_Comm ? item.fields.Last_x0020_PowerShell_x0020_Comm : "",
			RestrictedTo: item.fields.RestrictedTo ? item.fields.RestrictedTo : "",
			DeskNumber: item.fields.DeskNumber ? item.fields.DeskNumber : "",
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		Email: z.string(),
		ProvisioningStatus: z.string().nullable(),
		LocationonWorkspace: z.string(),
		Last_x0020_PowerShell_x0020_Comm: z.string(),
		RestrictedTo: z.string(),
		DeskNumber: z.string(),
		_ColorTag: z.string(),
	})
} export namespace Documents {
	export const listName = "Documents"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		_ColorTag: z.string(),
	})
} export namespace Events {
	export const listName = "Events"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			BannerImageUrl: item.fields.BannerImageUrl ? item.fields.BannerImageUrl : "",
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		BannerImageUrl: z.string(),
		_ColorTag: z.string(),
	})
} export namespace EventTracking {
	export const listName = "EventTracking"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		_ColorTag: z.string(),
	})
} export namespace Floors {
	export const listName = "Floors"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			FloorNumber: item.fields.FloorNumber,
			FloorPlan: item.fields.FloorPlan ? item.fields.FloorPlan : "",
			HasWorkspaces: item.fields.HasWorkspaces ? true : false,
			WayfindingInformation: item.fields.WayfindingInformation ? item.fields.WayfindingInformation : "",
			Workspaces: mapLookupMulti(item.fields.Workspaces),
			Rooms: mapLookupMulti(item.fields.Rooms),
			Rooms_x003a__x0020_Email: mapLookupMulti(item.fields.Rooms_x003a__x0020_Email),
			Rooms_x003a__x0020_Capacity: mapLookupMulti(item.fields.Rooms_x003a__x0020_Capacity),
			ProvisioningStatus: item.fields.ProvisioningStatus ?? "",
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		FloorNumber: z.number(),
		FloorPlan: z.string(),
		HasWorkspaces: z.boolean(),
		WayfindingInformation: z.string(),
		Workspaces: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).array().nullable(),
		Rooms: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).array().nullable(),
		Rooms_x003a__x0020_Email: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).array().nullable(),
		Rooms_x003a__x0020_Capacity: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).array().nullable(),
		ProvisioningStatus: z.string().nullable(),
		_ColorTag: z.string(),
	})
} export namespace FormTemplates {
	export const listName = "Form Templates"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		_ColorTag: z.string(),
	})
} export namespace ItemGroups {
	export const listName = "ItemGroups"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			Sort: item.fields.Sort,
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		Sort: z.number(),
		_ColorTag: z.string(),
	})
} export namespace Items {
	export const listName = "Items"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			Price: item.fields.Price,
			Description: item.fields.Description ? item.fields.Description : "",
			Comments: item.fields.Comments ? item.fields.Comments : "",
			Group: mapLookupMulti(item.fields.Group),
			Provider: mapLookup(item.fields.Provider),
			Currency: mapLookup(item.fields.Currency),
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		Price: z.number(),
		Description: z.string(),
		Comments: z.string(),
		Group: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).array().nullable(),
		Provider: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).nullable(),
		Currency: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).nullable(),
		_ColorTag: z.string(),
	})
} export namespace KeyValues {
	export const listName = "Key Values"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			Value: item.fields.Value ? item.fields.Value : "",
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		Value: z.string(),
		_ColorTag: z.string(),
	})
} export namespace Locations {
	export const listName = "Locations"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			Street: item.fields.Street ? item.fields.Street : "",
			City: item.fields.City ? item.fields.City : "",
			State: item.fields.State ? item.fields.State : "",
			PostalCode: item.fields.PostalCode ? item.fields.PostalCode : "",
			CountryOrRegion: item.fields.CountryOrRegion ? item.fields.CountryOrRegion : "",
			Buildings: mapLookupMulti(item.fields.Buildings),
			Latitude: item.fields.Latitude ? item.fields.Latitude : "",
			Longitude: item.fields.Longitude ? item.fields.Longitude : "",
			Companiesonthislocation: mapLookupMulti(item.fields.Companiesonthislocation),
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		Street: z.string(),
		City: z.string(),
		State: z.string(),
		PostalCode: z.string(),
		CountryOrRegion: z.string(),
		Buildings: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).array().nullable(),
		Latitude: z.string(),
		Longitude: z.string(),
		Companiesonthislocation: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).array().nullable(),
		_ColorTag: z.string(),
	})
} export namespace Pricelists2 {
	export const listName = "Pricelists2"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			Location: mapLookup(item.fields.Location),
			Item_x0020_Groups: mapLookupMulti(item.fields.Item_x0020_Groups),
			Provider: mapLookup(item.fields.Provider),
			Delivery_x0020_Instructions_x002: item.fields.Delivery_x0020_Instructions_x002 ? item.fields.Delivery_x0020_Instructions_x002 : "",
			Deliverto: item.fields.Deliverto ? item.fields.Deliverto : "",
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		Location: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).nullable(),
		Item_x0020_Groups: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).array().nullable(),
		Provider: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).nullable(),
		Delivery_x0020_Instructions_x002: z.string(),
		Deliverto: z.string(),
		_ColorTag: z.string(),
	})
} export namespace RoomSites {
	export const listName = "Room Sites"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			MailRequestto: item.fields.MailRequestto ? item.fields.MailRequestto : "",
			Integration: item.fields.Integration ? item.fields.Integration : "",
			IntegratedWith: item.fields.IntegratedWith ? item.fields.IntegratedWith : "",
			Name_x0020_prefix: item.fields.Name_x0020_prefix ? item.fields.Name_x0020_prefix : "",
			IntegrationStatus: item.fields.IntegrationStatus ? item.fields.IntegrationStatus : "",
			VisitorSystem: item.fields.VisitorSystem ? item.fields.VisitorSystem : "",
			Creategroupforsite: item.fields.Creategroupforsite ? true : false,
			VisitorSystemParameters: item.fields.VisitorSystemParameters ? item.fields.VisitorSystemParameters : "",
			Title_x0020_prefix: item.fields.Title_x0020_prefix ? item.fields.Title_x0020_prefix : "",
			Country: mapLookup(item.fields.Country),
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		MailRequestto: z.string(),
		Integration: z.string(),
		IntegratedWith: z.string(),
		Name_x0020_prefix: z.string(),
		IntegrationStatus: z.string(),
		VisitorSystem: z.string(),
		Creategroupforsite: z.boolean(),
		VisitorSystemParameters: z.string(),
		Title_x0020_prefix: z.string(),
		Country: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).nullable(),
		_ColorTag: z.string(),
	})
} export namespace Rooms {
	export const listName = "Rooms"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			LocationonFloor: item.fields.LocationonFloor ? item.fields.LocationonFloor : "",
			FloorMapZoom: item.fields.FloorMapZoom ? item.fields.FloorMapZoom : "",
			Provisioning_x0020_Status: item.fields.Provisioning_x0020_Status ?? "",
			Email: item.fields.Email ? item.fields.Email : "",
			Capacity: item.fields.Capacity,
			RestrictedTo: item.fields.RestrictedTo ? item.fields.RestrictedTo : "",
			TeamsMeetingRoom: item.fields.TeamsMeetingRoom ? true : false,
			Canbeusedforreceptions: item.fields.Canbeusedforreceptions ? true : false,
			DeviceSerialNumber: item.fields.DeviceSerialNumber ? item.fields.DeviceSerialNumber : "",
			Price_x0020_List: mapLookup(item.fields.Price_x0020_List),
			CiscoVideo: item.fields.CiscoVideo ? true : false,
			Production: item.fields.Production ? true : false,
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		LocationonFloor: z.string(),
		FloorMapZoom: z.string(),
		Provisioning_x0020_Status: z.string().nullable(),
		Email: z.string(),
		Capacity: z.number(),
		RestrictedTo: z.string(),
		TeamsMeetingRoom: z.boolean(),
		Canbeusedforreceptions: z.boolean(),
		DeviceSerialNumber: z.string(),
		Price_x0020_List: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).nullable(),
		CiscoVideo: z.boolean(),
		Production: z.boolean(),
		_ColorTag: z.string(),
	})
} export namespace SharedMailboxesOwners {
	export const listName = "Shared Mailboxes Owners"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			State: item.fields.State ?? "",
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
			VIP: item.fields.VIP ? true : false,
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		State: z.string().nullable(),
		_ColorTag: z.string(),
		VIP: z.boolean(),
	})
} export namespace SharedMailboxOwners {
	export const listName = "SharedMailbox Owners"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			Owners: item.fields.Owners ? item.fields.Owners : "",
			State: item.fields.State ? item.fields.State : "",
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		Owners: z.string(),
		State: z.string(),
		_ColorTag: z.string(),
	})
} export namespace SiteAssets {
	export const listName = "Site Assets"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			lcf76f155ced4ddcb4097134ff3c332f: item.fields.lcf76f155ced4ddcb4097134ff3c332f ? item.fields.lcf76f155ced4ddcb4097134ff3c332f : "",
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		lcf76f155ced4ddcb4097134ff3c332f: z.string(),
		_ColorTag: z.string(),
	})
} export namespace SitePages {
	export const listName = "Site Pages"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		_ColorTag: z.string(),
	})
} export namespace StyleLibrary {
	export const listName = "Style Library"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		_ColorTag: z.string(),
	})
} export namespace TestChanges {
	export const listName = "Test Changes"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		_ColorTag: z.string(),
	})
} export namespace UseCases {
	export const listName = "Use Cases"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		_ColorTag: z.string(),
	})
} export namespace Workspaces {
	export const listName = "Workspaces"

	export function map(item: any) {


		return {
			Id: item.id,
			Title: item.fields.Title,
			CreatedBy: item.createdBy.user.email,
			Created: new Date(item.createdDateTime),
			ModifiedBy: item.lastModifiedBy.user.email,
			Modified: new Date(item.lastModifiedDateTime),
			LocationonFloor: item.fields.LocationonFloor ? item.fields.LocationonFloor : "",
			FloorMapZoom: item.fields.FloorMapZoom ? item.fields.FloorMapZoom : "",
			Desks: mapLookupMulti(item.fields.Desks),
			Desks_x003a__x0020_Email: mapLookupMulti(item.fields.Desks_x003a__x0020_Email),
			Desks_x003a__x0020_Location_x002: mapLookupMulti(item.fields.Desks_x003a__x0020_Location_x002),
			_ColorTag: item.fields._ColorTag ? item.fields._ColorTag : "",
		}
	}
	export const schema = z.object({
		CreatedBy: z.string(),
		Created: z.date(),
		ModifiedBy: z.string(),
		Modified: z.date(),
		Id: z.string(),
		Title: z.string(),

		LocationonFloor: z.string(),
		FloorMapZoom: z.string(),
		Desks: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).array().nullable(),
		Desks_x003a__x0020_Email: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).array().nullable(),
		Desks_x003a__x0020_Location_x002: z.object({
			LookupId: z.number(),
			LookupValue: z.string()
		}).array().nullable(),
		_ColorTag: z.string(),
	})
}
